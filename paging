#include<stdio.h>
int main()
{
	int las,ps,nop,np,rempages,i,j,x,y,pa,offect;
	int s[10],fno[10][20];
	printf("\n enter the logical memory size...");
	scanf("%d",&las);
	printf("\n enter the page size...");
	scanf("%d",&ps);
	nop = las/ps;
	printf("\n the no.of pages available in memory are --%d",nop);
	printf("\n enter number of process--");
	scanf("%d",&np);
	rempages = nop;
	for(i =1;i<=np;i++)
	{
		printf("\n enter no.of pages required for p[%d]--",i);
		scanf("%d",&s[i]);
		if(s[i]>rempages)
		{
			printf("\n memory is full");
			break;
		}
		rempages = rempages - s[i];
		printf("\n enter page table for p[%d]--",i);
		for(j=1;j<=s[i];j++)
			scanf("%d",&fno[i][j]);
			
	}
	printf("\n enter logical address to find physical address");
	printf("\n enter process no and page number and effect--");
	scanf("%d%d%d",&x,&y,&offect);
	if(x>np || y>= s[i] || offect >= ps)
		printf("\n invalid process or pagrnumber or effect");
		else{
			pa = fno[x][y]*ps+offect;
			printf("\n the physical address is --%d",pa);
		}
}


OUTPUT:--
 enter the logical memory size...1000

 enter the page size...100

 the no.of pages available in memory are --10
 enter number of process--3

 enter no.of pages required for p[1]--4

 enter page table for p[1]--8 5 3 4

 enter no.of pages required for p[2]--5

 enter page table for p[2]--9 7 4 2 1

 enter no.of pages required for p[3]--1

 enter page table for p[3]--7

 enter logical address to find physical address
 enter process no and page number and effect--2 3 60

 the physical address is --460
